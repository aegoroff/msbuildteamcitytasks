<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- Importing MSBuild Community Tasks -->
    <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>

    <Import Project="WiX.msbuild"/>

    <!-- Importing MSBuild TeamCity Tasks -->
	<Import Project="$(MSBuildExtensionsPath)\MSBuildTeamCityTasks\MSBuild.TeamCity.Tasks.Targets"/>
	<!-- Global properties definitions -->
	<PropertyGroup>

		<!-- Code configuration to build (Release or Debug) -->
		<Configuration>Release</Configuration>
		<!-- NUnit working path  -->
		<NUnitPath>$(MSBuildProjectDirectory)\packages\NUnit.Runners.2.6.3\tools</NUnitPath>
		<OpenCoverPath>$(MSBuildProjectDirectory)\packages\OpenCover.4.5.2316</OpenCoverPath>
		<ReportGeneratorPath>$(MSBuildProjectDirectory)\packages\ReportGenerator.1.9.1.0</ReportGeneratorPath>
		
		<!-- Binaries zip  -->
		<BinariesFile>Binaries.zip</BinariesFile>
		
		<!-- Reports zip  -->
		<ReportsFile>Reports.zip</ReportsFile>
		
		<!-- Enables updating version mechanism -->
		<IsUpdateVersion>false</IsUpdateVersion>
		
		<!-- Managed unit tests report  -->
		<ManagedTestsReport>ManagedTests.xml</ManagedTestsReport>
		
		<!-- Version components  -->
		<Major>2</Major>
		<Minor>1</Minor>
		<Build>0</Build>
		<Revision>0</Revision>
		<!-- Development cycle stage (alpha, beta, etc.) -->
		<Stage>alpha</Stage>
		<!-- Can be Featured or empty Featured means to place it on main project page -->
		<IsFeatured>Featured</IsFeatured>
		<GoogleLogin>1</GoogleLogin>
		<GooglePassword>1</GooglePassword>
		<IsUpload>false</IsUpload>
		<Version>$(Major).$(Minor).$(Build).$(Revision)</Version>
	</PropertyGroup>
	<!-- Coverage report output file-->
	<ItemGroup>
		<CoverageFile Include="$(MSBuildProjectDirectory)\$(CoverageOutFile)" />
	</ItemGroup>
	<!-- AssemblyInfo.cs file definitions where to set version -->
	<ItemGroup>
		<AssemblyInfoFile Include="$(MSBuildProjectDirectory)\**\AssemblyInfo.cs" />
	</ItemGroup>
	<!-- Updating version and product code task -->
	<Target Name="VersionUpdater" Condition=" '$(IsUpdateVersion)'=='true' " DependsOnTargets="WixVersionUpdater">
		<!-- Updating AssemblyInfo.cs files -->
        <ItemGroup>
            <AssemblyInfoVersion Include="@(AssemblyInfoFile)">
                <Find><![CDATA[\[assembly(\s*):(\s*)(AssemblyVersion|AssemblyFileVersion|AssemblyInformationalVersionAttribute)\((\s*)"(\d+)\.(\d+)\.(\d+)\.(\d+)"(\s*)\)\]]]></Find>
                <ReplaceWith><![CDATA[[assembly : $3("$(Major).$(Minor).$(Build).$(Revision)")]]]></ReplaceWith>
                <Options>Singleline</Options>
            </AssemblyInfoVersion>
        </ItemGroup>
		<!-- Updating WiX files -->
        <ItemGroup>
            <WixVersion Include="$(MSBuildProjectDirectory)\Setup\Product.wxs">
                <Find><![CDATA[define Version = "(\d+)\.(\d+)\.(\d+).(\d+)"]]></Find>
                <ReplaceWith><![CDATA[define Version = "$(Major).$(Minor).$(Build).$(Revision)"]]></ReplaceWith>
                <Options>Singleline</Options>
            </WixVersion>
        </ItemGroup>
        <RegexTransform Items="@(WixVersion)" />
        <RegexTransform Items="@(AssemblyInfoVersion)" />
	</Target>
	<ItemGroup>
		<SetupFile Include="$(MSBuildProjectDirectory)\Setup\bin\$(Configuration)\MSBuild.TeamCity.Tasks.Setup.msi" />
	</ItemGroup>
	<ItemGroup>
		<SetupDestinationFile Include="$(MSBuildProjectDirectory)\MSBuild.TeamCity.Tasks.$(Major).$(Minor).$(Build).$(Revision).msi" />
	</ItemGroup>
	<!-- Main build step where solution file are built -->
	<Target Name="Compile" DependsOnTargets="VersionUpdater">
		<!-- Start building solution file -->
		<MSBuild
			StopOnFirstFailure="true"
			Projects="MSBuild.TeamCity.Tasks.sln"
			Properties="Configuration=$(Configuration)" 
		/>
	</Target>
	<!-- Running server's and GUI's unit tests task -->
	<Target Name="UnitTesting" DependsOnTargets="Compile">
		<!-- Managed tests -->
		<RunOpenCoverage
			ToolPath='$(OpenCoverPath)'
			TargetPath='$(NUnitPath)\nunit-console.exe'
			XmlReportPath='$(MSBuildProjectDirectory)\OpenCoverageReport.xml'
            TargetWorkDir='$(MSBuildProjectDirectory)\Tests\bin\$(Configuration)'
			TargetArguments="/nologo /noshadow /xml:$(MSBuildProjectDirectory)\$(ManagedTestsReport) $(MSBuildProjectDirectory)\Tests\bin\$(Configuration)\Tests.dll /framework:net-4.0 /config=$(Configuration)"
			Filter='+[MSBuild.TeamCity.Tasks]*'
		/>
		<Exec
			Command='"$(ReportGeneratorPath)\ReportGenerator.exe" "$(MSBuildProjectDirectory)\OpenCoverageReport.xml" "$(MSBuildProjectDirectory)\OpenCoverage" Html'
			IgnoreExitCode="true"
		/>
		<!-- Import into TeamCity mono tests -->
		<ImportData Type="nunit" Path="$(MSBuildProjectDirectory)\$(ManagedTestsReport)" />
	</Target>
	
	<!-- Zipping build artefacts task -->
	<Target Name="Zipping" DependsOnTargets="UnitTesting">
		<ItemGroup>
			<FileToZip Include="**\*.exe" />
			<FileToZip Include="**\*.pdb" />
			<FileToZip Include="**\*.dll" />
		</ItemGroup>
		<!-- Report files' definition-->
		<ItemGroup>
			<ReportFile Include="$(MSBuildProjectDirectory)\OpenCoverage\**\*.*" />
		</ItemGroup>
		<!-- Zipping binaries -->
		<Zip
			Files="@(FileToZip)"
			ZipFileName="$(BinariesFile)"
			Flatten="true"
			ZipLevel="9"
			WorkingDirectory="$(MSBuildProjectDirectory)" 
		/>
		<!-- Zipping reports -->
		<Zip
			Files="@(ReportFile)"
			ZipFileName="$(ReportsFile)"
			ZipLevel="9"
			WorkingDirectory="$(MSBuildProjectDirectory)" 
		/>
	</Target>
	<ItemGroup>
		<Artifact Include="src/$(BinariesFile)" />
		<Artifact Include="src/$(ReportsFile)" />
		<Artifact Include="src/MSBuild.TeamCity.Tasks.$(Major).$(Minor).$(Build).$(Revision).msi" />
	</ItemGroup>
	<!-- Setting next build version and finish build process -->
	<Target Name="Build" DependsOnTargets="Zipping">
		<ItemGroup>
			<Project Include="MSBuildTeamCityTasks.shfbproj" />
			<Project Include="Setup\Setup.wixproj" />
		</ItemGroup>
		<MSBuild
			StopOnFirstFailure="true"
			Projects="%(Project.Identity)"
			Properties="Configuration=$(Configuration)" 
		/>
		<Copy
			SourceFiles="@(SetupFile)"
			DestinationFiles="@(SetupDestinationFile)"
		/>
		<Delete Files="@(SetupFile)" />
		<PublishArtifacts Artifacts="@(Artifact)"/>
		<Message Text="Build $(Major).$(Minor).$(Build).$(Revision) Complete"/>
	</Target>
</Project>